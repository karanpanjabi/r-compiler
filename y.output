Grammar

    0 $accept: start $end

    1 start: exprlist

    2 exprlist: %empty
    3         | expr_or_assign
    4         | exprlist SEMICOLON expr_or_assign
    5         | exprlist SEMICOLON
    6         | exprlist NEWLINE expr_or_assign
    7         | exprlist NEWLINE
    8         | exprlist NEWLINE print_statement
    9         | exprlist SEMICOLON print_statement
   10         | print_statement

   11 expr_or_assign: expr
   12               | equal_assign
   13               | statement

   14 statement: IF ifcond expr_or_assign
   15          | IF ifcond expr_or_assign ELSE expr_or_assign
   16          | FOR forcond expr_or_assign
   17          | WHILE cond expr_or_assign

   18 equal_assign: expr EQ_ASSIGN expr_or_assign

   19 print_statement: PRINT_ expr RIGHT_PAREN

   20 cond: LEFT_PAREN expr RIGHT_PAREN

   21 ifcond: LEFT_PAREN expr RIGHT_PAREN

   22 forcond: LEFT_PAREN SYMBOL IN expr RIGHT_PAREN

   23 expr: SYMBOL
   24     | NUM_CONST
   25     | STR_CONST
   26     | LEFT_CURLY exprlist RIGHT_CURLY
   27     | LEFT_PAREN expr_or_assign RIGHT_PAREN
   28     | expr COLON expr
   29     | expr PLUS expr
   30     | expr MINUS expr
   31     | expr STAR expr
   32     | expr FSLASH expr
   33     | expr LT expr
   34     | expr LE expr
   35     | expr EQ expr
   36     | expr NE expr
   37     | expr GE expr
   38     | expr GT expr
   39     | expr AND2 expr
   40     | expr OR2 expr
   41     | expr LEFT_ASSIGN expr


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM_CONST (258) 24
STR_CONST (259) 25
SYMBOL (260) 22 23
LT (261) 33
LE (262) 34
EQ (263) 35
NE (264) 36
GE (265) 37
GT (266) 38
AND2 (267) 39
OR2 (268) 40
LEFT_ASSIGN (269) 41
EQ_ASSIGN (270) 18
IF (271) 14 15
ELSE (272) 15
FOR (273) 16
WHILE (274) 17
IN (275) 22
PRINT_ (276) 19
NEWLINE (277) 6 7 8
PLUS (278) 29
MINUS (279) 30
STAR (280) 31
FSLASH (281) 32
SEMICOLON (282) 4 5 9
COLON (283) 28
LEFT_PAREN (284) 20 21 22 27
RIGHT_PAREN (285) 19 20 21 22 27
LEFT_CURLY (286) 26
RIGHT_CURLY (287) 26


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
start (34)
    on left: 1, on right: 0
exprlist (35)
    on left: 2 3 4 5 6 7 8 9 10, on right: 1 4 5 6 7 8 9 26
expr_or_assign (36)
    on left: 11 12 13, on right: 3 4 6 14 15 16 17 18 27
statement (37)
    on left: 14 15 16 17, on right: 13
equal_assign (38)
    on left: 18, on right: 12
print_statement (39)
    on left: 19, on right: 8 9 10
cond (40)
    on left: 20, on right: 17
ifcond (41)
    on left: 21, on right: 14 15
forcond (42)
    on left: 22, on right: 16
expr (43)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41, on right: 11 18 19 20 21 22 28 29 30 31 32 33 34 35 36 37 38
    39 40 41


State 0

    0 $accept: . start $end

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 2 (exprlist)

    start            go to state 10
    exprlist         go to state 11
    expr_or_assign   go to state 12
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 15
    expr             go to state 16


State 1

   24 expr: NUM_CONST .

    $default  reduce using rule 24 (expr)


State 2

   25 expr: STR_CONST .

    $default  reduce using rule 25 (expr)


State 3

   23 expr: SYMBOL .

    $default  reduce using rule 23 (expr)


State 4

   14 statement: IF . ifcond expr_or_assign
   15          | IF . ifcond expr_or_assign ELSE expr_or_assign

    LEFT_PAREN  shift, and go to state 17

    ifcond  go to state 18


State 5

   16 statement: FOR . forcond expr_or_assign

    LEFT_PAREN  shift, and go to state 19

    forcond  go to state 20


State 6

   17 statement: WHILE . cond expr_or_assign

    LEFT_PAREN  shift, and go to state 21

    cond  go to state 22


State 7

   19 print_statement: PRINT_ . expr RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 23


State 8

   27 expr: LEFT_PAREN . expr_or_assign RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 24
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 9

   26 expr: LEFT_CURLY . exprlist RIGHT_CURLY

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 2 (exprlist)

    exprlist         go to state 25
    expr_or_assign   go to state 12
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 15
    expr             go to state 16


State 10

    0 $accept: start . $end

    $end  shift, and go to state 26


State 11

    1 start: exprlist .
    4 exprlist: exprlist . SEMICOLON expr_or_assign
    5         | exprlist . SEMICOLON
    6         | exprlist . NEWLINE expr_or_assign
    7         | exprlist . NEWLINE
    8         | exprlist . NEWLINE print_statement
    9         | exprlist . SEMICOLON print_statement

    NEWLINE    shift, and go to state 27
    SEMICOLON  shift, and go to state 28

    $default  reduce using rule 1 (start)


State 12

    3 exprlist: expr_or_assign .

    $default  reduce using rule 3 (exprlist)


State 13

   13 expr_or_assign: statement .

    $default  reduce using rule 13 (expr_or_assign)


State 14

   12 expr_or_assign: equal_assign .

    $default  reduce using rule 12 (expr_or_assign)


State 15

   10 exprlist: print_statement .

    $default  reduce using rule 10 (exprlist)


State 16

   11 expr_or_assign: expr .
   18 equal_assign: expr . EQ_ASSIGN expr_or_assign
   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    LT           shift, and go to state 29
    LE           shift, and go to state 30
    EQ           shift, and go to state 31
    NE           shift, and go to state 32
    GE           shift, and go to state 33
    GT           shift, and go to state 34
    AND2         shift, and go to state 35
    OR2          shift, and go to state 36
    LEFT_ASSIGN  shift, and go to state 37
    EQ_ASSIGN    shift, and go to state 38
    PLUS         shift, and go to state 39
    MINUS        shift, and go to state 40
    STAR         shift, and go to state 41
    FSLASH       shift, and go to state 42
    COLON        shift, and go to state 43

    $default  reduce using rule 11 (expr_or_assign)


State 17

   21 ifcond: LEFT_PAREN . expr RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 44


State 18

   14 statement: IF ifcond . expr_or_assign
   15          | IF ifcond . expr_or_assign ELSE expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 45
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 19

   22 forcond: LEFT_PAREN . SYMBOL IN expr RIGHT_PAREN

    SYMBOL  shift, and go to state 46


State 20

   16 statement: FOR forcond . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 47
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 21

   20 cond: LEFT_PAREN . expr RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 48


State 22

   17 statement: WHILE cond . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 49
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 23

   19 print_statement: PRINT_ expr . RIGHT_PAREN
   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    LT           shift, and go to state 29
    LE           shift, and go to state 30
    EQ           shift, and go to state 31
    NE           shift, and go to state 32
    GE           shift, and go to state 33
    GT           shift, and go to state 34
    AND2         shift, and go to state 35
    OR2          shift, and go to state 36
    LEFT_ASSIGN  shift, and go to state 37
    PLUS         shift, and go to state 39
    MINUS        shift, and go to state 40
    STAR         shift, and go to state 41
    FSLASH       shift, and go to state 42
    COLON        shift, and go to state 43
    RIGHT_PAREN  shift, and go to state 50


State 24

   27 expr: LEFT_PAREN expr_or_assign . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 51


State 25

    4 exprlist: exprlist . SEMICOLON expr_or_assign
    5         | exprlist . SEMICOLON
    6         | exprlist . NEWLINE expr_or_assign
    7         | exprlist . NEWLINE
    8         | exprlist . NEWLINE print_statement
    9         | exprlist . SEMICOLON print_statement
   26 expr: LEFT_CURLY exprlist . RIGHT_CURLY

    NEWLINE      shift, and go to state 27
    SEMICOLON    shift, and go to state 28
    RIGHT_CURLY  shift, and go to state 52


State 26

    0 $accept: start $end .

    $default  accept


State 27

    6 exprlist: exprlist NEWLINE . expr_or_assign
    7         | exprlist NEWLINE .
    8         | exprlist NEWLINE . print_statement

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 7 (exprlist)

    expr_or_assign   go to state 53
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 54
    expr             go to state 16


State 28

    4 exprlist: exprlist SEMICOLON . expr_or_assign
    5         | exprlist SEMICOLON .
    9         | exprlist SEMICOLON . print_statement

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    PRINT_      shift, and go to state 7
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    $default  reduce using rule 5 (exprlist)

    expr_or_assign   go to state 55
    statement        go to state 13
    equal_assign     go to state 14
    print_statement  go to state 56
    expr             go to state 16


State 29

   33 expr: expr LT . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 57


State 30

   34 expr: expr LE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 58


State 31

   35 expr: expr EQ . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 59


State 32

   36 expr: expr NE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 60


State 33

   37 expr: expr GE . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 61


State 34

   38 expr: expr GT . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 62


State 35

   39 expr: expr AND2 . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 63


State 36

   40 expr: expr OR2 . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 64


State 37

   41 expr: expr LEFT_ASSIGN . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 65


State 38

   18 equal_assign: expr EQ_ASSIGN . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 66
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 39

   29 expr: expr PLUS . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 67


State 40

   30 expr: expr MINUS . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 68


State 41

   31 expr: expr STAR . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 69


State 42

   32 expr: expr FSLASH . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 70


State 43

   28 expr: expr COLON . expr

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 71


State 44

   21 ifcond: LEFT_PAREN expr . RIGHT_PAREN
   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    LT           shift, and go to state 29
    LE           shift, and go to state 30
    EQ           shift, and go to state 31
    NE           shift, and go to state 32
    GE           shift, and go to state 33
    GT           shift, and go to state 34
    AND2         shift, and go to state 35
    OR2          shift, and go to state 36
    LEFT_ASSIGN  shift, and go to state 37
    PLUS         shift, and go to state 39
    MINUS        shift, and go to state 40
    STAR         shift, and go to state 41
    FSLASH       shift, and go to state 42
    COLON        shift, and go to state 43
    RIGHT_PAREN  shift, and go to state 72


State 45

   14 statement: IF ifcond expr_or_assign .
   15          | IF ifcond expr_or_assign . ELSE expr_or_assign

    ELSE  shift, and go to state 73

    $default  reduce using rule 14 (statement)


State 46

   22 forcond: LEFT_PAREN SYMBOL . IN expr RIGHT_PAREN

    IN  shift, and go to state 74


State 47

   16 statement: FOR forcond expr_or_assign .

    $default  reduce using rule 16 (statement)


State 48

   20 cond: LEFT_PAREN expr . RIGHT_PAREN
   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    LT           shift, and go to state 29
    LE           shift, and go to state 30
    EQ           shift, and go to state 31
    NE           shift, and go to state 32
    GE           shift, and go to state 33
    GT           shift, and go to state 34
    AND2         shift, and go to state 35
    OR2          shift, and go to state 36
    LEFT_ASSIGN  shift, and go to state 37
    PLUS         shift, and go to state 39
    MINUS        shift, and go to state 40
    STAR         shift, and go to state 41
    FSLASH       shift, and go to state 42
    COLON        shift, and go to state 43
    RIGHT_PAREN  shift, and go to state 75


State 49

   17 statement: WHILE cond expr_or_assign .

    $default  reduce using rule 17 (statement)


State 50

   19 print_statement: PRINT_ expr RIGHT_PAREN .

    $default  reduce using rule 19 (print_statement)


State 51

   27 expr: LEFT_PAREN expr_or_assign RIGHT_PAREN .

    $default  reduce using rule 27 (expr)


State 52

   26 expr: LEFT_CURLY exprlist RIGHT_CURLY .

    $default  reduce using rule 26 (expr)


State 53

    6 exprlist: exprlist NEWLINE expr_or_assign .

    $default  reduce using rule 6 (exprlist)


State 54

    8 exprlist: exprlist NEWLINE print_statement .

    $default  reduce using rule 8 (exprlist)


State 55

    4 exprlist: exprlist SEMICOLON expr_or_assign .

    $default  reduce using rule 4 (exprlist)


State 56

    9 exprlist: exprlist SEMICOLON print_statement .

    $default  reduce using rule 9 (exprlist)


State 57

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   33     | expr LT expr .
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 33 (expr)


State 58

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   34     | expr LE expr .
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 34 (expr)


State 59

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   35     | expr EQ expr .
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 35 (expr)


State 60

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   36     | expr NE expr .
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 36 (expr)


State 61

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   37     | expr GE expr .
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 37 (expr)


State 62

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   38     | expr GT expr .
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    LT  error (nonassociative)
    LE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)
    GE  error (nonassociative)
    GT  error (nonassociative)

    $default  reduce using rule 38 (expr)


State 63

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   39     | expr AND2 expr .
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    LT      shift, and go to state 29
    LE      shift, and go to state 30
    EQ      shift, and go to state 31
    NE      shift, and go to state 32
    GE      shift, and go to state 33
    GT      shift, and go to state 34
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    $default  reduce using rule 39 (expr)


State 64

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   40     | expr OR2 expr .
   41     | expr . LEFT_ASSIGN expr

    LT      shift, and go to state 29
    LE      shift, and go to state 30
    EQ      shift, and go to state 31
    NE      shift, and go to state 32
    GE      shift, and go to state 33
    GT      shift, and go to state 34
    AND2    shift, and go to state 35
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    $default  reduce using rule 40 (expr)


State 65

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr
   41     | expr LEFT_ASSIGN expr .

    LT           shift, and go to state 29
    LE           shift, and go to state 30
    EQ           shift, and go to state 31
    NE           shift, and go to state 32
    GE           shift, and go to state 33
    GT           shift, and go to state 34
    AND2         shift, and go to state 35
    OR2          shift, and go to state 36
    LEFT_ASSIGN  shift, and go to state 37
    PLUS         shift, and go to state 39
    MINUS        shift, and go to state 40
    STAR         shift, and go to state 41
    FSLASH       shift, and go to state 42
    COLON        shift, and go to state 43

    $default  reduce using rule 41 (expr)


State 66

   18 equal_assign: expr EQ_ASSIGN expr_or_assign .

    $default  reduce using rule 18 (equal_assign)


State 67

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   29     | expr PLUS expr .
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    $default  reduce using rule 29 (expr)


State 68

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   30     | expr MINUS expr .
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    STAR    shift, and go to state 41
    FSLASH  shift, and go to state 42
    COLON   shift, and go to state 43

    $default  reduce using rule 30 (expr)


State 69

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   31     | expr STAR expr .
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    COLON  shift, and go to state 43

    $default  reduce using rule 31 (expr)


State 70

   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   32     | expr FSLASH expr .
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    COLON  shift, and go to state 43

    $default  reduce using rule 32 (expr)


State 71

   28 expr: expr . COLON expr
   28     | expr COLON expr .
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    $default  reduce using rule 28 (expr)


State 72

   21 ifcond: LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 21 (ifcond)


State 73

   15 statement: IF ifcond expr_or_assign ELSE . expr_or_assign

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    IF          shift, and go to state 4
    FOR         shift, and go to state 5
    WHILE       shift, and go to state 6
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr_or_assign  go to state 76
    statement       go to state 13
    equal_assign    go to state 14
    expr            go to state 16


State 74

   22 forcond: LEFT_PAREN SYMBOL IN . expr RIGHT_PAREN

    NUM_CONST   shift, and go to state 1
    STR_CONST   shift, and go to state 2
    SYMBOL      shift, and go to state 3
    LEFT_PAREN  shift, and go to state 8
    LEFT_CURLY  shift, and go to state 9

    expr  go to state 77


State 75

   20 cond: LEFT_PAREN expr RIGHT_PAREN .

    $default  reduce using rule 20 (cond)


State 76

   15 statement: IF ifcond expr_or_assign ELSE expr_or_assign .

    $default  reduce using rule 15 (statement)


State 77

   22 forcond: LEFT_PAREN SYMBOL IN expr . RIGHT_PAREN
   28 expr: expr . COLON expr
   29     | expr . PLUS expr
   30     | expr . MINUS expr
   31     | expr . STAR expr
   32     | expr . FSLASH expr
   33     | expr . LT expr
   34     | expr . LE expr
   35     | expr . EQ expr
   36     | expr . NE expr
   37     | expr . GE expr
   38     | expr . GT expr
   39     | expr . AND2 expr
   40     | expr . OR2 expr
   41     | expr . LEFT_ASSIGN expr

    LT           shift, and go to state 29
    LE           shift, and go to state 30
    EQ           shift, and go to state 31
    NE           shift, and go to state 32
    GE           shift, and go to state 33
    GT           shift, and go to state 34
    AND2         shift, and go to state 35
    OR2          shift, and go to state 36
    LEFT_ASSIGN  shift, and go to state 37
    PLUS         shift, and go to state 39
    MINUS        shift, and go to state 40
    STAR         shift, and go to state 41
    FSLASH       shift, and go to state 42
    COLON        shift, and go to state 43
    RIGHT_PAREN  shift, and go to state 78


State 78

   22 forcond: LEFT_PAREN SYMBOL IN expr RIGHT_PAREN .

    $default  reduce using rule 22 (forcond)
